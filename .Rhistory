kable_styling(latex_options = c("repeat_header")) %>%
pack_rows("Control variables", 3, 4, latex_gap_space = "2em")
kbl(fc_three, caption = "Table 6: Effect of congruency of venture attention and institutional level (Credit gaps) of financial capital") %>%
add_header_above(c(" ", "Model w/ controls" = 4, "Model w/o controls" = 4), italic = T) %>%
kable_styling(latex_options = c("repeat_header")) %>%
pack_rows("Control variables", 3, 4, latex_gap_space = "2em")
kbl(sc_zero, caption = "Table 7: Effect of attention to social capital") %>%
add_header_above(c(" ", "Model w/ controls" = 4, "Model w/o controls" = 4), italic = T) %>%
kable_styling(latex_options = c("repeat_header")) %>%
pack_rows("Control variables", 3, 4, latex_gap_space = "2em")
kbl(sc_one, caption = "Table 8: Effect of congruency of venture attention and institutional level of social capital") %>%
add_header_above(c(" ", "Model w/ controls" = 4, "Model w/o controls" = 4), italic = T) %>%
kable_styling(latex_options = c("repeat_header")) %>%
pack_rows("Control variables", 3, 4, latex_gap_space = "2em")
#kable(sc1_c[,-1], escape = FALSE, caption = "Table 16: Effect of congruency of venture attention and institutional level of social capital - Model with controls")
#Print summaries
kable(hc_zero, booktabs = T, caption = "Table 1: Effect of attention to human capital", escape = F, format = "latex") %>%
add_header_above(c(" ", "Model w/ controls" = 4, "Model w/o controls" = 4), italic = T) %>%
kable_styling(latex_options = c("repeat_header")) %>%
pack_rows("Control variables", 3, 4, latex_gap_space = "2em")
#Print summaries
kable(hc_zero, booktabs = T, caption = "Table 1: Effect of attention to human capital", escape = F) %>%
add_header_above(c(" ", "Model w/ controls" = 4, "Model w/o controls" = 4), italic = T) %>%
kable_styling(latex_options = c("repeat_header")) %>%
pack_rows("Control variables", 3, 4, latex_gap_space = "2em")
library("papaja")
r_refs("r-references.bib")
#Print summaries
clearCache(path=getCachePath(...), ..., recursive=FALSE, prompt=TRUE && interactive())
#Outcome: Resource acquistion
clearCache()
#Outcome: Resource acquistion
library(SparkR)
#Outcome: Resource acquistion
install.packages("SparkR")
library(SparkR)
clearCache()
#Outcome: Resource acquistion
install.packages("SparkR")
summary_table <- function(x){ x$coefficients %>%
as.data.frame %>%
rename(
"$b$" = "Estimate"
, "SE" = "Std. Error"
, "$t$" = "t value"
, "$p$" = "Pr(>|t|)"
) %>%
mutate(
Effect = papaja:::prettify_terms(rownames(.))
) %>%
printnum(
digits = c(2, 2, 2, 3)
, gt1 = c(TRUE, TRUE, TRUE, TRUE, FALSE, FALSE)
, zero = c(TRUE, TRUE, TRUE, TRUE, FALSE, FALSE)
) %>%
select(Effect, `$b$`, `SE`, `$t$`, `$p$`)}
#Outcome: Resource acquistion
library(lme4)
fit00hc <- lmer(hr_tot ~  accel_ben_rank_business_skills + (accel_ben_rank_business_skills|country), data = gali_joined, REML = F)
library(rio)
library(tidyverse)
library(janitor)
library(ggplot2)
library(psych)
library(knitr)
library(preprocessCore)
library(kableExtra)
library(kableExtra)
gali <- import("Data/GALI_External_DataRelease_2020.xlsx")
wb <- import("Data/CLASS.xls")
count(gali,info_venture_country_hq)
#Removing countries with less than 6 ventures.
countries_to_keep <- gali %>%
group_by(gali$info_venture_country_hq) %>%
summarize(Count=n()) %>%
mutate(Percent = round((Count/sum(Count)*100))) %>%
arrange(desc(Count))
countries_to_keep <- filter(countries_to_keep, `gali$info_venture_country_hq` != 'NA')
countries_to_keep <- filter(countries_to_keep, Count >9)
countries_to_keep$`gali$info_venture_country_hq`
gali <- gali %>%
filter(info_venture_country_hq  %in% countries_to_keep$`gali$info_venture_country_hq`)
gali <- filter(gali, found_name1_age > 14 | is.na(found_name1_age))
gali <- filter(gali, found_name2_age > 14 | is.na(found_name2_age))
gali <- filter(gali, found_name3_age > 14 | is.na(found_name3_age))
gali <- filter(gali, found_name1_age < 70 | is.na(found_name1_age))
gali <- filter(gali, found_name2_age < 70 | is.na(found_name2_age))
gali <- filter(gali, found_name3_age < 70 | is.na(found_name3_age))
#Keep only for porfit firms
gali <- filter(gali, info_legal_status == "For-profit company" )
#firms that are 5 years or younger when they entered the acceleration program (when data was collected)
if (gali$application_year == 2013) { gali <- filter(gali, info_founding_year > 2007)
}  else if (gali$application_year == 2014) {gali <- filter(gali, info_founding_year > 2008)
} else if (gali$application_year == 2015) {gali <- filter(gali, info_founding_year > 2009)
}  else if (gali$application_year == 2016) {gali <- filter(gali, info_founding_year > 2010)
} else if (gali$application_year == 2017) {gali <- filter(gali, info_founding_year > 2011)
}  else gali <- filter(gali, info_founding_year > 2012)
gali <- gali %>%
rename(country = info_venture_country_hq) %>%
rename(year = program_year)
gali$country[gali$country == "United States of America"] <-"USA"
gali$country[gali$country == "Tanzania, United Republic of"] <-"Tanzania"
countries_to_keep <- gali %>%
group_by(gali$country) %>%
summarize(Count=n()) %>%
mutate(Percent = round((Count/sum(Count)*100))) %>%
arrange(desc(Count))
countries_to_keep <- filter(countries_to_keep, `gali$country` != 'NA')
countries_to_keep <- filter(countries_to_keep, Count >9)
countries_to_keep$`gali$country`
gali <- gali %>%
filter(country  %in% countries_to_keep$`gali$country`)
gci <- import("Data/GCI_2018.xlsx")
gci <- filter(gci, `Series Global ID` == "EOSQ089" |
`Series Global ID` == "EOSQ425" |
`Series Global ID` == "EOSQ109" |
`Series Global ID` == "DOMCREDITGDP" |
`Series Global ID` == "EOSQ403")
gci <- filter(gci, Edition ==2018 )
gci <- filter(gci, Attribute == "VALUE")
gci <- select(gci, -c("Index", "Edition", "Freeze date", "Series units", "Series order", "Series code (if applicable)", "Attribute", "Series name"))
gci <- gci %>%
gather(country, score, -`Series Global ID`)
gci$country[gci$country == "United States"] <-"USA"
gci <- gci %>%
filter(country  %in% countries_to_keep$`gali$country`)
gci$score <- round(as.numeric(gci$score),2)
gci <- clean_names(gci)
gci <- gci %>%
pivot_wider(names_from = series_global_id,
values_from = score)
library(plot3D)
with(gci, text3D(EOSQ403, EOSQ425, EOSQ109,
labels = gci$country,
col = gg.col(100), theta = 60, phi = 20,
xlab = "Human capital", ylab = "Financial capital", zlab = "Social capital",
main = "Institutional level resources", cex = 0.6,
bty = "g", ticktype = "detailed", d = 2,
clab = c("Urban","Pop"), adj = 1, font = 1.5))
#Zoom into to the middle for more clarity
plotdev(xlim = c(3, 4), ylim = c(3, 5.5),
zlim = c(3, 3.8))
## Attention to capital - venture data
#Removing ventures that ranked benefits outside of given scale (i.e. 1 to 7)
gali <- filter(gali, accel_ben_rank_network <= 7 & accel_ben_rank_business_skills
<= 7 & accel_ben_rank_mentorship <= 7 & accel_ben_rank_access_investors <= 7 & accel_ben_rank_direct_funding <= 7 & accel_ben_rank_access_entreprene <= 7 & accel_ben_rank_aware_cred <= 7 )
#Removing ventures that gave the same ranking to two or more benefits
gali <- filter(gali,
accel_ben_rank_network != accel_ben_rank_business_skills &
accel_ben_rank_network != accel_ben_rank_mentorship &
accel_ben_rank_network != accel_ben_rank_access_investors &
accel_ben_rank_network != accel_ben_rank_direct_funding &
accel_ben_rank_network != accel_ben_rank_access_entreprene &
accel_ben_rank_network != accel_ben_rank_aware_cred )
gali <- filter(gali,
accel_ben_rank_business_skills != accel_ben_rank_mentorship &
accel_ben_rank_business_skills != accel_ben_rank_access_investors &
accel_ben_rank_business_skills != accel_ben_rank_direct_funding &
accel_ben_rank_business_skills != accel_ben_rank_access_entreprene &
accel_ben_rank_business_skills != accel_ben_rank_aware_cred )
gali <- filter(gali,
accel_ben_rank_mentorship != accel_ben_rank_access_investors &
accel_ben_rank_mentorship != accel_ben_rank_direct_funding &
accel_ben_rank_mentorship != accel_ben_rank_access_entreprene &
accel_ben_rank_mentorship != accel_ben_rank_aware_cred )
gali <- filter(gali,
accel_ben_rank_access_investors != accel_ben_rank_direct_funding &
accel_ben_rank_access_investors != accel_ben_rank_access_entreprene &
accel_ben_rank_access_investors != accel_ben_rank_aware_cred )
gali <- filter(gali,
accel_ben_rank_direct_funding != accel_ben_rank_access_entreprene &
accel_ben_rank_direct_funding != accel_ben_rank_aware_cred )
gali <- filter(gali,
accel_ben_rank_access_entreprene != accel_ben_rank_aware_cred )
##Control variables
##Constrcuting human capital index (control variable)
###Graduate percentage, Prior C-level Executive Percentage, Average Team Tenure , Team Prior Founding
#Graduate percentage
gali$founder1_grad = ifelse(gali$found_name1_education == "Masters Degree" |
gali$found_name1_education =="PhD" |
gali$found_name1_education == "Some graduate degree", 1, 0)
gali$founder1_grad[is.na(gali$founder1_grad)] <- 0
gali$founder2_grad = ifelse(gali$found_name2_education == "Masters Degree" |
gali$found_name2_education =="PhD" |
gali$found_name2_education == "Some graduate degree", 1, 0)
gali$founder2_grad[is.na(gali$founder2_grad)] <- 0
gali$founder3_grad = ifelse(gali$found_name3_education == "Masters Degree" |
gali$found_name3_education =="PhD" |
gali$found_name3_education == "Some graduate degree", 1, 0)
gali$founder3_grad[is.na(gali$founder3_grad)] <- 0
gali$nb_of_founders <- gali$found_name1_present + gali$found_name2_present + gali$found_name3_present
gali <- filter(gali, nb_of_founders > 0)
gali$grad_pct = ((gali$founder1_grad + gali$founder2_grad + gali$founder3_grad) / gali$nb_of_founders)
#Prior C-level Executive Percentage
gali$founder1_job1_clevel = ifelse(is.na(gali$found_name1_job1_role) | gali$found_name1_job1_role !=  "CEO/Executive Director" , 0, 1)
gali$founder1_job2_clevel = ifelse(is.na(gali$found_name1_job2_role) | gali$found_name1_job2_role !=  "CEO/Executive Director" , 0, 1)
gali$founder2_job1_clevel = ifelse(is.na(gali$found_name2_job1_role) | gali$found_name2_job1_role !=  "CEO/Executive Director" , 0, 1)
gali$founder2_job2_clevel = ifelse(is.na(gali$found_name2_job2_role) | gali$found_name2_job2_role !=  "CEO/Executive Director" , 0, 1)
gali$founder3_job1_clevel = ifelse(is.na(gali$found_name3_job1_role) | gali$found_name3_job1_role !=  "CEO/Executive Director" , 0, 1)
gali$founder3_job2_clevel = ifelse(is.na(gali$found_name3_job2_role) | gali$found_name3_job2_role !=  "CEO/Executive Director" , 0, 1)
gali$prior_clevel_pct = ((gali$founder1_job1_clevel + gali$founder1_job2_clevel + gali$founder2_job1_clevel +
gali$founder2_job2_clevel + gali$founder3_job1_clevel + gali$founder3_job2_clevel) / (gali$nb_of_founders*2))
#Average Team Tenure
gali$avg_teamtenure <- rowMeans(subset(gali, select = c('found_name1_job1_tenure', 'found_name1_job2_tenure', 'found_name2_job1_tenure', 'found_name2_job2_tenure', 'found_name3_job1_tenure', 'found_name3_job2_tenure')), na.rm = TRUE)
gali$avg_teamtenure[is.nan(gali$avg_teamtenure)] <- 0
#Team Prior Founding
gali$team_prior_founding <- gali$found_name1_prior_fp + gali$found_name2_prior_fp + gali$found_name3_prior_fp + gali$found_name1_prior_other + gali$found_name2_prior_other + gali$found_name3_prior_other + gali$found_name1_prior_np + gali$found_name2_prior_np + gali$found_name3_prior_np
#Final Human Capital Index
gali$z_team_prior_founding <- scale(gali$team_prior_founding, center = TRUE, scale = TRUE)
gali$z_prior_clevel_pct <- scale(gali$prior_clevel_pct, center = TRUE, scale = TRUE)
gali$z_avg_teamtenure <- scale(gali$avg_teamtenure, center = TRUE, scale = TRUE)
gali$z_grad_pct <- scale(gali$grad_pct, center = TRUE, scale = TRUE)
#Cite Bolstad et al, Bioinformatics (2003)
gali$normq_team_prior_founding <- normalize.quantiles(gali$z_team_prior_founding,copy=TRUE)
gali$normq_prior_clevel_pct <- normalize.quantiles(gali$z_prior_clevel_pct,copy=TRUE)
gali$normq_avg_teamtenure <- normalize.quantiles(gali$z_avg_teamtenure,copy=TRUE)
gali$normq_grad_pct <- normalize.quantiles(gali$z_grad_pct,copy=TRUE)
#group all into an index
gali$HC_index <- (gali$normq_team_prior_founding + gali$normq_prior_clevel_pct + gali$normq_avg_teamtenure + gali$normq_grad_pct)
##Gender composition variable
gali <- gali %>% drop_na(found_name1_gender)
gali$found_name2_gender[is.na(gali$found_name2_gender)] <- 0
gali$found_name3_gender[is.na(gali$found_name3_gender)] <- 0
gali$founder1_f <- ifelse(gali$found_name1_gender == "F", 1,0)
gali$founder2_f <- ifelse(gali$found_name2_gender == "F", 1,0)
gali$founder3_f <- ifelse(gali$found_name3_gender == "F", 1,0)
gali$female_pct <- round(((gali$founder1_f + gali$founder2_f + gali$founder3_f) / gali$nb_of_founders ), 2)
#Reverse code attention variable
#Reverse code fundtion
reverse <- function(x){x*-1 +8}
gali_att <- as.data.frame(lapply(gali %>%
select(starts_with("accel_ben_rank_")), reverse))
gali <- cbind(gali %>%
select(-starts_with("accel_ben_rank_")), gali_att)
#Distribution of attention
a <- gali %>%
select(country, starts_with("accel_ben_rank_"))
colnames(a) <- c( "Country", "Network", "Business Skills", "Mentorship", "Investors", "Direct Funding", "Peers", "Credibility")
a <- left_join(a, wb, by = "Country" )
a <- a %>%
pivot_longer(!c("Country", "Region","Income group"), names_to = "Attention", values_to = "Score")
a[is.na(a)] <- "High Income"  #The two countries with NA values are USA and UK because of naming issues. They are both classified high income
a  %>%
ggplot(aes(Score)) +
geom_bar() +
facet_grid(~Attention) +
theme_bw()
#Some countries are classified as "High income" while other are "High Income". I will capitilize all first letter to solve this issue
simpleCap <- function(x) {
s <- strsplit(x, " ")[[1]]
paste(toupper(substring(s, 1,1)), substring(s, 2),
sep="", collapse=" ")
}
a$`Income group` <- gsub("(^|[[:space:]])([[:alpha:]])", "\\1\\U\\2", a$`Income group`, perl=TRUE)
a  %>%
ggplot(aes(Score)) +
geom_bar() +
facet_grid(vars(`Income group`), vars(Attention)) +
theme_bw()
#Revenues
gali <- gali %>% mutate(revenue_tot = gali %>%
select(contains("revenues")) %>%
rowSums(na.rm = TRUE))
#Human capital acquisition
gali  <- gali %>% mutate(hr_tot = gali %>%
select(contains("_employees")) %>%
rowSums(na.rm = TRUE))
#Social capital acquisition
gali <- gali %>% mutate(equity_sources_tot = gali %>%
select(contains("equityfrom")) %>%
rowSums(na.rm = TRUE))
#Fiancial Capital acquisiton total
gali  <- gali %>% mutate(capital_raised0 = gali %>% select(starts_with("inv_") & ends_with("_m1")) %>%
rowSums(na.rm = TRUE))
gali  <- gali %>% mutate(capital_raised1 = gali %>% select(starts_with("fu1inv_") & ends_with("_m1")) %>%
rowSums(na.rm = TRUE))
gali  <- gali %>% mutate(capital_raised2 = gali %>% select(starts_with("fu2inv_") & ends_with("_m1")) %>%
rowSums(na.rm = TRUE))
gali  <- gali %>% mutate(capital_raised3 = gali %>% select(starts_with("fu3inv_") & ends_with("_m1")) %>%
rowSums(na.rm = TRUE))
gali  <- gali %>% mutate(capital_raised4 = gali %>% select(starts_with("fu4inv_") & ends_with("_m1")) %>%
rowSums(na.rm = TRUE))
gali  <- gali %>% mutate(capital_raised_tot = gali %>% select(starts_with("capital_raised")) %>%
rowSums(na.rm = TRUE))
#Predictor and outcome plots
b <- gali %>%
select(country, equity_sources_tot, revenue_tot, capital_raised_tot, starts_with("accel_ben_rank_"))
colnames(b) <- c( "Country", "Total Equity Sources", "Revenue", "Capital Raised", "Network", "Business Skills", "Mentorship", "Investors", "Direct Funding", "Peers", "Credibility")
b <- left_join(b, wb, by = "Country" )
b <- b %>%
pivot_longer(!c("Country", "Total Equity Sources", "Income group", "Region", "Revenue", "Capital Raised"), names_to = "Attention", values_to = "Score")
b[is.na(b)] <- "High Income"  #The two countries with NA values are USA and UK because of naming issues. They are both classified high income
#Some countries are classified as "High income" while other are "High Income". I will capitilize all first letter to solve this issue
b$`Income group` <- gsub("(^|[[:space:]])([[:alpha:]])", "\\1\\U\\2", b$`Income group`, perl=TRUE)
filter(b, Attention == "Network")  %>%
ggplot(aes(Score, `Total Equity Sources`)) +
geom_point()  +
facet_grid(~`Income group`)+
theme_bw()
filter(b, Attention == "Direct Funding")  %>%
ggplot(aes(Score, `Capital Raised`)) +
geom_point()  +
facet_grid(~`Income group`)+
theme_bw()
mean_norm_minmax <- function(x){
(x- mean(x)) /(max(x)-min(x))
}
mean_norm_att <- as.data.frame(lapply(gali %>%
select(starts_with("accel_ben_rank_")), mean_norm_minmax))
gali <- cbind(gali %>%
select(-starts_with("accel_ben_rank_")), mean_norm_att)
#Join all 3 datasets
gali_joined <- left_join(gali, gci, by = "country")
# Results
#Function to extract coefficients of summary table
summary_table <- function(x){ x$coefficients %>%
as.data.frame %>%
rename(
"$b$" = "Estimate"
, "SE" = "Std. Error"
, "$t$" = "t value"
, "$p$" = "Pr(>|t|)"
) %>%
mutate(
Effect = papaja:::prettify_terms(rownames(.))
) %>%
printnum(
digits = c(2, 2, 2, 3)
, gt1 = c(TRUE, TRUE, TRUE, TRUE, FALSE, FALSE)
, zero = c(TRUE, TRUE, TRUE, TRUE, FALSE, FALSE)
) %>%
select(Effect, `$b$`, `SE`, `$t$`, `$p$`)}
#for glmer
summary_table_z <- function(x){ x$coefficients %>%
as.data.frame %>%
rename(
"$b$" = "Estimate"
, "SE" = "Std. Error"
, "$z$" = "z value"
, "$p$" = "Pr(>|z|)"
) %>%
mutate(
Effect = papaja:::prettify_terms(rownames(.))
) %>%
printnum(
digits = c(2, 2, 2, 3)
, gt1 = c(TRUE, TRUE, TRUE, TRUE, FALSE, FALSE)
, zero = c(TRUE, TRUE, TRUE, TRUE, FALSE, FALSE)
) %>%
select(Effect, `$b$`, `SE`, `$z$`, `$p$`)}
#Outcome: Resource acquistion
library(lme4)
fit00hc <- lmer(hr_tot ~  accel_ben_rank_business_skills + (accel_ben_rank_business_skills|country), data = gali_joined, REML = F)
fit11hc <- lmer(hr_tot ~  accel_ben_rank_business_skills*EOSQ403 + (accel_ben_rank_business_skills|country), data = gali_joined, REML = F)
fit00fc <- lmer(capital_raised_tot ~ + accel_ben_rank_direct_funding+ (accel_ben_rank_direct_funding|country), data = gali_joined, REML = F)
fit11fc <- lmer(capital_raised_tot ~ accel_ben_rank_direct_funding*EOSQ425 + (accel_ben_rank_direct_funding |country ), data = gali_joined, REML = F)
fit22fc <- lmer(capital_raised_tot ~ accel_ben_rank_direct_funding*EOSQ089 + (accel_ben_rank_direct_funding |country ), data = gali_joined, REML = F)
fit33fc <- lmer(capital_raised_tot ~ accel_ben_rank_direct_funding*DOMCREDITGDP + (accel_ben_rank_direct_funding |country), data = gali_joined, REML = F)
fit00sc <- lmer(equity_sources_tot ~ accel_ben_rank_network + (accel_ben_rank_network |country), data = gali_joined, REML = F)
fit11sc <- lmer(equity_sources_tot ~ accel_ben_rank_network*EOSQ109 + (accel_ben_rank_network | country), data = gali_joined, REML = F)
hc00 <- summary_table(summary(fit00hc))
hc11 <- summary_table(summary(fit11hc))
fc00 <- summary_table(summary(fit00fc))
fc11 <- summary_table(summary(fit11fc))
fc22 <- summary_table(summary(fit22fc))
fc33 <- summary_table(summary(fit33fc))
sc00 <- summary_table(summary(fit00sc))
sc11 <- summary_table(summary(fit11sc))
rownames(hc00) <- c("Intercept","Attention to Human capital")
rownames(hc11) <- c("Intercept","AHC", "Ease of finding skilled employees", "AHCxEase of finding skilled employees")
rownames(fc00) <- c("Intercept","Attention to Financial capital")
rownames(fc11) <- c("Intercept","AFC", "Financing of SMEs", "AFCxFinancing of SMEs")
rownames(fc22) <- c("Intercept","AFC", "VC Availability", "AFCxVC Availability")
rownames(fc33) <- c("Intercept","AFC", "Domestic Credit Gaps", "AFCxDomestic Credit Gaps")
rownames(sc00) <- c("Intercept","Attention to Social capital")
rownames(sc11) <- c("Intercept","ASC", "State of cluster development","ASCxState of cluster development")
#kable(hc00[,-1], escape = FALSE)
#kable(hc11[,-1], escape = FALSE)
#kable(fc00[,-1], escape = FALSE)
#kable(fc11[,-1], escape = FALSE)
#kable(fc22[,-1], escape = FALSE)
#kable(fc33[,-1], escape = FALSE)
#kable(sc00[,-1], escape = FALSE)
#kable(sc11[,-1], escape = FALSE, caption = "This is the table caption")
cbindX(hc00[,-1], hc11[,-1])
#This is not my code. It is from https://rdrr.io/cran/gdata/src/R/cbindX.R to help me me bind cols of dfs with different number of rows
cbindX <- function(...)
{
## --- Setup ---
x <- list(...)
## Are all objects matrices or data.frames?
test <- sapply(x, function(z) is.matrix(z) | is.data.frame(z))
if(any(!test)) stop("only matrices and data.frames can be used")
## Get maximum number of rows
tmp <- sapply(x, nrow)
maxi <- which.max(tmp)
test <- tmp < tmp[maxi]
## --- Core ---
## Adding additional "empty" rows so that all objects have the same number of rows
for(i in 1:length(tmp)) {
if(test[i]) {
add <- matrix(nrow=tmp[maxi] - tmp[i], ncol=ncol(x[[i]]))
if(is.data.frame(x[[i]])) {
add <- as.data.frame(add)
}
colnames(add) <- colnames(x[[i]])
x[[i]] <- rbind(x[[i]], add)
}
}
## Column-bind all objects
ret <- x[[1]]
for(i in 2:length(tmp)) {
ret <- cbind(ret, x[[i]])
}
## --- Return ---
ret
}
cbindX(hc00[,-1], hc11[,-1])
hc <- cbindX(hc11[,-1], hc00[,-1])
hc
fc <- cbindX(fc11[,-1],fc22[,-1],fc33[,-1], f00[,-1])
fc <- cbindX(fc11[,-1],fc22[,-1],fc33[,-1], fc00[,-1])
fc
fc <- cbindX(fc11[,-1], fc00[,-1])
hc <- cbindX(hc11[,-1], hc00[,-1])
kable(hc, caption = "Effect on total employees") %>%
add_header_above(c(" ", "AHC only" = 4, "Congruence" = 4), italic = T) %>%
kable_styling(latex_options = c("repeat_header")) %>%
pack_rows("Control variables", 4, 4, latex_gap_space = "2em")
kable(hc, caption = "Effect on total employees") %>%
add_header_above(c(" ", "Congruence" = 4, "AHC only" = 4), italic = T)
kable(fc, caption = "Effect on capital raised") %>%
add_header_above(c(" ", "Congruence" = 4, "AHC only" = 4), italic = T)
kable(fc22, caption = "Effect on capital raised")
kable(fc22[,-1])
kable(fc33[,-1])
fit0_hc <- lmer(revenue ~  accel_ben_rank_business_skills + (accel_ben_rank_business_skills|country), data = gali_joined, REML = F)
fit0_hc <- lmer(revenues ~  accel_ben_rank_business_skills + (accel_ben_rank_business_skills|country), data = gali_joined, REML = F)
fit0_hc <- lmer(revenue_tot ~  accel_ben_rank_business_skills + (accel_ben_rank_business_skills|country), data = gali_joined, REML = F)
#Outcome: Resource acquistion
library(lme4)
fit0_hc <- lmer(revenue_tot ~  accel_ben_rank_business_skills + (accel_ben_rank_business_skills|country), data = gali_joined, REML = F)
fit1_hc <- lmer(revenue_tot ~  accel_ben_rank_business_skills*EOSQ403 + (accel_ben_rank_business_skills|country), data = gali_joined, REML = F)
fit0_fc <- lmer(revenue_tot ~ + accel_ben_rank_direct_funding+ (accel_ben_rank_direct_funding|country), data = gali_joined, REML = F)
fit1_fc <- lmer(revenue_tot ~ + accel_ben_rank_direct_funding*EOSQ425+ accel_ben_rank_direct_funding*EOSQ089 + accel_ben_rank_direct_funding*DOMCREDITGDP + (accel_ben_rank_direct_funding|country), data = gali_joined, REML = F)
fit0_sc <- lmer(revenue_tot ~ accel_ben_rank_network + (accel_ben_rank_network |country), data = gali_joined, REML = F)
fit1_sc <- lmer(revenue_sources_tot ~ accel_ben_rank_network*EOSQ109 + (accel_ben_rank_network | country), data = gali_joined, REML = F)
fc_1 <- summary_table(summary(fit1_fc))
fc_1
rownames(hc_0) <- c("Intercept","Attention to Human capital")
hc_0 <- summary_table(summary(fit0_hc))
hc_1 <- summary_table(summary(fit1_hc))
fc_0 <- summary_table(summary(fit0_fc))
fc_1 <- summary_table(summary(fit1_fc))
sc_0 <- summary_table(summary(fit0_sc))
rownames(hc_0) <- c("Intercept","Attention to Human capital")
rownames(hc_1) <- c("Intercept","AHC", "Ease of finding skilled employees", "AHCxEase of finding skilled employees")
rownames(fc_0) <- c("Intercept","Attention to Financial capital")
rownames(fc_1) <- c("Intercept","AFC", "Financing of SMEs", "VC Availability", "Domestic Credit Gaps", "AFCxFinancing of SMEs", "AFCxVC Availability", "AFCxDomestic Credit Gaps")
rownames(sc_0) <- c("Intercept","Attention to Social capital")
hc <- cbindX(hc_1[,-1], hc_0[,-1])
hc
fc <- cbindX(fc_1[,-1], fc_0[,-1])
fc
#Outcome: Resource acquistion
library(lme4)
fit00hc <- lmer(hr_tot ~  accel_ben_rank_business_skills + (accel_ben_rank_business_skills|country), data = gali_joined, REML = F)
fit11hc <- lmer(hr_tot ~  accel_ben_rank_business_skills*EOSQ403 + (accel_ben_rank_business_skills|country), data = gali_joined, REML = F)
fit00fc <- lmer(capital_raised_tot ~ + accel_ben_rank_direct_funding+ (accel_ben_rank_direct_funding|country), data = gali_joined, REML = F)
fit11fc <- lmer(capital_raised_tot ~ accel_ben_rank_direct_funding*EOSQ425 + (accel_ben_rank_direct_funding |country ), data = gali_joined, REML = F)
fit22fc <- lmer(capital_raised_tot ~ accel_ben_rank_direct_funding*EOSQ089 + (accel_ben_rank_direct_funding |country ), data = gali_joined, REML = F)
fit33fc <- lmer(capital_raised_tot ~ accel_ben_rank_direct_funding*DOMCREDITGDP + (accel_ben_rank_direct_funding |country), data = gali_joined, REML = F)
fit00sc <- lmer(equity_sources_tot ~ accel_ben_rank_network + (accel_ben_rank_network |country), data = gali_joined, REML = F)
fit11sc <- lmer(equity_sources_tot ~ accel_ben_rank_network*EOSQ109 + (accel_ben_rank_network | country), data = gali_joined, REML = F)
#summary tables
hc00 <- summary_table(summary(fit00hc))
hc11 <- summary_table(summary(fit11hc))
fc00 <- summary_table(summary(fit00fc))
fc11 <- summary_table(summary(fit11fc))
fc22 <- summary_table(summary(fit22fc))
fc33 <- summary_table(summary(fit33fc))
sc00 <- summary_table(summary(fit00sc))
sc11 <- summary_table(summary(fit11sc))
rownames(hc00) <- c("Intercept","Attention to Human capital")
rownames(hc11) <- c("Intercept","AHC", "Ease of finding skilled employees", "AHCxEase of finding skilled employees")
rownames(fc00) <- c("Intercept","Attention to Financial capital")
rownames(fc11) <- c("Intercept","AFC", "Financing of SMEs", "AFCxFinancing of SMEs")
rownames(fc22) <- c("Intercept","AFC", "VC Availability", "AFCxVC Availability")
rownames(fc33) <- c("Intercept","AFC", "Domestic Credit Gaps", "AFCxDomestic Credit Gaps")
rownames(sc00) <- c("Intercept","Attention to Social capital")
rownames(sc11) <- c("Intercept","ASC", "State of cluster development","ASCxState of cluster development")
hc <- cbindX(hc11[,-1], hc00[,-1])
fc <- cbindX(fc11[,-1], fc00[,-1])
sc <- cbindX(sc11[,-1], sc00[,-1])
#Print summaries
kable(hc, caption = "Effect on total employees") %>%
add_header_above(c(" ", "Congruence" = 4, "AHC only" = 4), italic = T)
kable(fc, caption = "Effect on capital raised") %>%
add_header_above(c(" ", "Congruence" = 4, "AFC only" = 4), italic = T)
kable(fc22[,-1])
kable(fc33[,-1])
kable(sc, caption = "Effect on sources of capital") %>%
add_header_above(c(" ", "Congruence" = 4, "ASC only" = 4), italic =T)
library("papaja")
r_refs("r-references.bib")
#Print summaries
kable(hc_r, escape = F, caption = "Effect on revenues") %>%
add_header_above(c(" ", "Congruence" = 3, "AHC only" = 3), italic = T)
#Print summaries
kable(hc_r, escape = F, caption = "Effect on revenues", digits = 0) %>%
add_header_above(c(" ", "Congruence" = 3, "AHC only" = 3), italic = T) %>%
kable_styling(font_size = 7)
